knitr::opts_chunk$set(echo = FALSE)
summary(cars)
knitr::opts_chunk$set(echo = TRUE)
library(knitr)
kable(head(A1_T11_4))
rlip <- data.frame(year=1968:1976,
x=c(0.01138, 0.02299, -0.03957, -0.05467, 0.00535, 0.07427, 0.06450, -0.10443, -0.00700))
View(rlip)
df68 <- data.frame(year=1968, strike=c(7, 9, 13, 14, 26, 29, 52, 130)                  )
df69 <- data.frame(year=1969, strike=c(9, 37, 41, 49, 52, 119)                         )
df70 <- data.frame(year=1970, strike=c(3, 17, 19, 28, 72, 99, 104, 114, 152, 153, 216) )
df71 <- data.frame(year=1971, strike=c(15, 61, 98)                                     )
df72 <- data.frame(year=1972, strike=c(2, 25, 85)                                      )
df73 <- data.frame(year=1973, strike=c(3, 10)                                          )
df74 <- data.frame(year=1974, strike=c(1,2,3,3,3,4,8,11,22,23,27,32,33,35,43,43,44,100))
df75 <- data.frame(year=1975, strike=c(5, 49)                                          )
df76 <- data.frame(year=1976, strike=c(2,12,12,21,21,27,38,42,117)                     )
kiefer <- merge(rbind(df68, df69, df70, df71, df72, df73, df74, df75, df76),rlip)
View(kiefer)
with(kiefer, mean(strike))
with(kiefer, log(mean(strike)))
with(kiefer, var(strike))
summary(constant.glm <- glm(strike ~ 1  , data=kiefer, family=poisson))
logLik(constant.glm)
poissonll <- function(beta) {
y <- kiefer$strike
cons <- rep(1, length(kiefer$strike))
-sum( -exp(beta*cons) + y * beta * cons ) }
## Find log lambda that minimizes negative log likelihood
(poissonll.opt  <- optimize( poissonll, interval=c(0,5)  ))
(poissonll.opt  <- optim( 1,  poissonll ))
possonll(40)
poissonll(40)
setwd("I:/Evan/Documents/Umass/Econ 753/EvanWasner_Econ753_ProblemSets/Assignment 6")
## Libraries
library(alfred) # Read from FRED
library(tidyverse)
library(reshape2)
library(gridExtra)
U3  <- get_fred_series("UNRATE", series_name="U3") # U3 unemployment
U6  <- get_fred_series("U6RATE", series_name="U6") # U6 unemployment
TCU  <- get_fred_series("TCU", series_name="TCU") # Capacity utilization
TCU <- mutate(TCU, TCU=100-TCU) # Convert to underutilization
ProfitShare <- get_fred_series("W270RE1A156NBEA", series_name = "WageShare")
ProfitShare <- mutate(ProfitShare, ProfitShare=100-WageShare) # Convert to profitshare
CPIU  <- get_fred_series("CPIAUCSL", series_name="CPI")
## Merge data to Philips Curve dataframe
PC <- merge(CPIU, U3, by="date", all=TRUE)
PC <- merge(PC, U6, by="date", all=TRUE)
PC <- merge(PC, TCU, by="date", all=TRUE)
PC <- merge(PC, ProfitShare, by="date", all=TRUE)
## Separate into year and month
PC <- mutate(PC,
year=str_split_fixed(date, "-", 3)[,1],
month=str_split_fixed(date, "-", 3)[,2])
## Get annual averages of values
PC <- merge(aggregate(PC[,c("CPI","U3", "U6", "TCU")],
by=list(PC$year),
FUN=mean,
na.action = na.pass),
na.omit(PC[,c("year","ProfitShare")]),
by.x="Group.1",
by.y="year",
all=TRUE)
## Calculate inflation
PC <- mutate(PC,
CPIU_Inflation=100*(CPI-lag(CPI))/lag(CPI),
ProfitShare_Inflation=100*(ProfitShare-lag(ProfitShare))/lag(ProfitShare))
PC <- cbind(data.frame(year=as.double(PC[,"Group.1"])),
round(PC[,c("U3", "U6", "TCU", "CPIU_Inflation", "ProfitShare_Inflation")],1))
PC.50s <- filter(PC, year>1950 & year<=1960)
PC.60s <- filter(PC, year>1960 & year<=1970)
PC.70s <- filter(PC, year>1970 & year<=1980)
PC.80s <- filter(PC, year>1980 & year<=1990)
PC.90s <- filter(PC, year>1990 & year<=2000)
PC.00s <- filter(PC, year>2000 & year<=2010)
PC.10s <- filter(PC, year>2010 & year<=2020)
## Make list with all data
PC.List <- list(PC.50s,
PC.60s,
PC.70s,
PC.80s,
PC.90s,
PC.00s,
PC.10s)
years.List <- list("1950-1960",
"1960-1970",
"1970-1980",
"1980-1990",
"1990-2000",
"2000-2010",
"2010-2020")
PC <- mutate(PC, TCU_Scaled=2*TCU/3)
## Melt to get multiple line plots
PC.Melt.U <- melt(PC,
id="year",
measure.vars=c("U3",
"U6",
"TCU_Scaled"),
variable.name="Rate_Type",
value.name="Value")
PC.Melt.I <- melt(PC,
id="year",
measure.vars=c("CPIU_Inflation",
"ProfitShare_Inflation"),
variable.name="Rate_Type",
value.name="Value")
PC
save(PC,
PC.List,
PC.Melt.I,
PC.Melt.U,
years.List,
file="PC.Rdata")
rm(list = ls())
knitr::opts_chunk$set(echo = FALSE)
load("PC.Rdata")
## Assign a ggplot for each year: U3
for(val in c(1:7)) {
assign(paste0("p_U3_",val),
ggplot(PC.List[[val]], aes(x=U3, y=CPIU_Inflation)) +
geom_point() +
xlab("Unemployment (U3) Rate") +
ylab("Inflation (CPI)") +
ggtitle(years.List[[val]]) +
geom_smooth(method="lm", se=FALSE) +
theme_bw())
}
## Assign a ggplot for each year: U6
for(val in c(5:7)) {
assign(paste0("p_U6_",val),
ggplot(PC.List[[val]], aes(x=U6, y=CPIU_Inflation)) +
geom_point() +
xlab("Unemployment (U6) Rate") +
ylab("Inflation (CPI)") +
ggtitle(years.List[[val]]) +
geom_smooth(method="lm", se=FALSE) +
theme_bw())
}
## Assign a ggplot for each year: TCU
for(val in c(3:7)) {
assign(paste0("p_TCU_",val),
ggplot(PC.List[[val]], aes(x=TCU, y=CPIU_Inflation)) +
geom_point() +
xlab("Capacity Underutilization Rate") +
ylab("Inflation (CPI)") +
ggtitle(years.List[[val]]) +
geom_smooth(method="lm", se=FALSE) +
theme_bw())
}
## Assign a ggplot for each year: ProfitShare Inflation
for(val in c(1:7)) {
assign(paste0("p_ProfitShare_",val),
ggplot(PC.List[[val]], aes(x=U3, y=ProfitShare_Inflation)) +
geom_point() +
xlab("Unemployment (U3) Rate") +
ylab("Inflation (ProfitShare)") +
ggtitle(years.List[[val]]) +
geom_smooth(method="lm", se=FALSE) +
theme_bw())
}
library(tidyverse)
ggplot(PC, aes(x=U3, y=CPIU_Inflation)) +
geom_point() +
xlab("Unemployment (U3) Rate") +
ylab("Inflation") +
#  ggtitle(years.List[[val]]) +
geom_smooth(method="lm", se=FALSE) +
theme_bw()
knitr::opts_chunk$set(echo = FALSE)
library(tidyverse)
## Load data
load("PC.Rdata")
## Assign a ggplot for each year: U3
for(val in c(1:7)) {
assign(paste0("p_U3_",val),
ggplot(PC.List[[val]], aes(x=U3, y=CPIU_Inflation)) +
geom_point() +
#xlab("Unemployment (U3) Rate") +
#ylab("Inflation (CPI)") +
scale_x_continuous(limits=c(0,10), labels="Unemployment (U3) Rate") +
scale_y_continuous(limits=c(-2,15), labels="Unemployment (U3) Rate") +
ggtitle(years.List[[val]]) +
geom_smooth(method="lm", se=FALSE) +
theme_bw())
}
## Assign a ggplot for each year: U6
for(val in c(5:7)) {
assign(paste0("p_U6_",val),
ggplot(PC.List[[val]], aes(x=U6, y=CPIU_Inflation)) +
geom_point() +
xlab("Unemployment (U6) Rate") +
ylab("Inflation (CPI)") +
ggtitle(years.List[[val]]) +
geom_smooth(method="lm", se=FALSE) +
theme_bw())
}
## Assign a ggplot for each year: TCU
for(val in c(3:7)) {
assign(paste0("p_TCU_",val),
ggplot(PC.List[[val]], aes(x=TCU, y=CPIU_Inflation)) +
geom_point() +
xlab("Capacity Underutilization Rate") +
ylab("Inflation (CPI)") +
ggtitle(years.List[[val]]) +
geom_smooth(method="lm", se=FALSE) +
theme_bw())
}
## Assign a ggplot for each year: ProfitShare Inflation
for(val in c(1:7)) {
assign(paste0("p_ProfitShare_",val),
ggplot(PC.List[[val]], aes(x=U3, y=ProfitShare_Inflation)) +
geom_point() +
xlab("Unemployment (U3) Rate") +
ylab("Inflation (ProfitShare)") +
ggtitle(years.List[[val]]) +
geom_smooth(method="lm", se=FALSE) +
theme_bw())
}
library(tidyverse)
ggplot(PC, aes(x=U3, y=CPIU_Inflation)) +
geom_point() +
xlab("Unemployment (U3) Rate") +
ylab("Inflation") +
#  ggtitle(years.List[[val]]) +
#  geom_smooth(method="lm", se=FALSE) +
theme_bw()
library(tidyverse)
library(gridExtra)
grid.arrange(p_U3_1, p_U3_2, p_U3_3, p_U3_4, nrow = 2)
library(tidyverse)
library(gridExtra)
grid.arrange(ggplot(PC.Melt.U, aes(x=year, y=Value, col=Rate_Type)) +
geom_line(size=1) +
scale_color_discrete(name="Rate Type",
labels=c("U3",
"U6",
"Capacity Underutilization\n(Scaled by 2/3)")) +
theme_bw(),
ggplot(PC.Melt.I, aes(x=year, y=Value, col=Rate_Type)) +
geom_line(size=1) +
scale_color_discrete(name="Rate Type",
labels=c("Inflation (CPI)",
"Inflation (Profit Share)")) +
theme_bw(),
nrow=2)
ggplot(PC.Melt, aes(x=year, y=Value, col=Rate_Type)) +
geom_line(size=1) +
scale_color_discrete(name="Rate Type",
labels=c("U3",
"U6",
"Capacity Underutilization\n(Scaled by 2/3)",
"Inflation (CPI)",
"Inflation (Profit Share)")) +
theme_bw()
library(tidyverse)
library(gridExtra)
grid.arrange(ggplot(PC.Melt.U, aes(x=year, y=Value, col=Rate_Type)) +
geom_line(size=1) +
scale_color_discrete(name="Rate Type",
labels=c("U3",
"U6",
"Capacity Underutilization\n(Scaled by 2/3)")) +
theme_bw(),
ggplot(PC.Melt.I, aes(x=year, y=Value, col=Rate_Type)) +
geom_line(size=1) +
scale_color_discrete(name="Rate Type",
labels=c("Inflation (CPI)",
"Inflation (Profit Share)")) +
theme_bw(),
nrow=2)
ggplot(PC.Melt.I, aes(x=year, y=Value, col=Rate_Type)) +
geom_line(size=1) +
scale_color_discrete(name="Rate Type",
labels=c("U3",
"U6",
"Capacity Underutilization\n(Scaled by 2/3)",
"Inflation (CPI)",
"Inflation (Profit Share)")) +
theme_bw()
library(tidyverse)
library(gridExtra)
grid.arrange(ggplot(PC.Melt.U, aes(x=year, y=Value, col=Rate_Type)) +
geom_line(size=1) +
scale_color_discrete(name="Rate Type",
labels=c("U3",
"U6",
"Capacity Underutilization\n(Scaled by 2/3)")) +
theme_bw(),
ggplot(PC.Melt.I, aes(x=year, y=Value, col=Rate_Type)) +
geom_line(size=1) +
scale_color_discrete(name="Rate Type",
labels=c("Inflation (CPI)",
"Inflation (Profit Share)")) +
theme_bw(),
nrow=2)
setwd("I:/Evan/Documents/Umass/Econ 753/EvanWasner_Econ753_ProblemSets/Assignment 6")
## Libraries
library(alfred) # Read from FRED
library(tidyverse)
library(reshape2)
library(gridExtra)
## Clear workplace
rm(list = ls())
U3  <- get_fred_series("UNRATE", series_name="U3") # U3 unemployment
U6  <- get_fred_series("U6RATE", series_name="U6") # U6 unemployment
TCU  <- get_fred_series("TCU", series_name="TCU") # Capacity utilization
TCU <- mutate(TCU, TCU=100-TCU) # Convert to underutilization
WageShare <- get_fred_series("W270RE1A156NBEA", series_name = "WageShare")
#WageShare <- mutate(WageShare, WageShare=100-WageShare) # Convert to WageShare
CPIU  <- get_fred_series("CPIAUCSL", series_name="CPI")
## Merge data to Philips Curve dataframe
PC <- merge(CPIU, U3, by="date", all=TRUE)
PC <- merge(PC, U6, by="date", all=TRUE)
PC <- merge(PC, TCU, by="date", all=TRUE)
PC <- merge(PC, WageShare, by="date", all=TRUE)
PC <- mutate(PC,
year=str_split_fixed(date, "-", 3)[,1],
month=str_split_fixed(date, "-", 3)[,2])
PC <- merge(aggregate(PC[,c("CPI","U3", "U6", "TCU")],
by=list(PC$year),
FUN=mean,
na.action = na.pass),
na.omit(PC[,c("year","WageShare")]),
by.x="Group.1",
by.y="year",
all=TRUE)
PC
PC <- mutate(PC,
CPIU_Inflation=100*(CPI-lag(CPI))/lag(CPI),
WageShare_Inflation=100*(WageShare-lag(WageShare))/lag(WageShare))
PC <- cbind(data.frame(year=as.double(PC[,"Group.1"])),
round(PC[,c("U3", "U6", "TCU", "CPIU_Inflation", "WageShare_Inflation")],1))
PC
PC.50s <- filter(PC, year>1950 & year<=1960)
PC.60s <- filter(PC, year>1960 & year<=1970)
PC.70s <- filter(PC, year>1970 & year<=1980)
PC.80s <- filter(PC, year>1980 & year<=1990)
PC.90s <- filter(PC, year>1990 & year<=2000)
PC.00s <- filter(PC, year>2000 & year<=2010)
PC.10s <- filter(PC, year>2010 & year<=2020)
## Make list with all data
PC.List <- list(PC.50s,
PC.60s,
PC.70s,
PC.80s,
PC.90s,
PC.00s,
PC.10s)
## Make a list of year ranges for labels
years.List <- list("1950-1960",
"1960-1970",
"1970-1980",
"1980-1990",
"1990-2000",
"2000-2010",
"2010-2020")
PC <- mutate(PC, TCU_Scaled=2*TCU/3)
## Melt to get multiple line plots
PC.Melt.U <- melt(PC,
id="year",
measure.vars=c("U3",
"U6",
"TCU_Scaled"),
variable.name="Rate_Type",
value.name="Value")
PC.Melt.I <- melt(PC,
id="year",
measure.vars=c("CPIU_Inflation",
"WageShare_Inflation"),
variable.name="Rate_Type",
value.name="Value")
## Save data
save(PC,
PC.List,
PC.Melt.I,
PC.Melt.U,
years.List,
file="PC.Rdata")
ggplot(PC, aes(x=U3, y=WageShare_Inflation)) + geom_point()
library(tidyverse)
ggplot(PC, aes(x=U3, y=WageShare_Inflation)) +
geom_point() +
xlab("Unemployment (U3) Rate") +
ylab("Inflation (Wage Share)") +
#  ggtitle(years.List[[val]]) +
#  geom_smooth(method="lm", se=FALSE) +
theme_bw()
library(tidyverse)
ggplot(PC, aes(x=U3, y=WageShare_Inflation)) +
geom_point() +
xlab("Unemployment (U3) Rate") +
ylab("Inflation (Wage Share)") +
#  ggtitle(years.List[[val]]) +
#  geom_smooth(method="lm", se=FALSE) +
theme_bw()
library(tidyverse)
ggplot(PC, aes(x=U3, y=WageShare_Inflation)) +
geom_point() +
xlab("Unemployment (U3) Rate") +
ylab("Inflation (Wage Share)") +
#  ggtitle(years.List[[val]]) +
geom_smooth(method="lm", se=FALSE) +
theme_bw()
