save(cor65,file="cor65.Rdata")
################
## Question 3 ##
##   PART b   ##
################
## Run regression of lnrent and save data
chow.lm65 <- lm(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65)
save(chow.lm65,file="chow.lm65.Rdata")
## Create table for price indices
priceIndexTable <- data.frame(Year=c("1960", "1961", "1962", "1963", "1964", "1965"),
Estimated_Coefficient=chow.lm65$coefficients[1:6])
priceIndexTable <- mutate(priceIndexTable, Price_Index=ifelse(Year==1960,1,exp(Estimated_Coefficient)))
save(priceIndexTable,file="priceIndexTable.Rdata")
################
## Question 3 ##
##   PART e   ##
################
chow65.generalized <- chow65
sqrt(chow65.generalized$volume)*chow65.generalized$add
chow <- mutate(chow, generalizedlnrent=lnrent*sqrt(volume))
View(chow)
## Import data
chow <- read.dta("http://courses.umass.edu/econ753/berndt/stata/chow.dta")
## Add columns
chow <- mutate(chow, lnrent=log(rent), lnmult=log(mult), lnaccess=log(access),
lnadd=log(add), mem=words*binary*digits, lnmem=log(words*binary*digits),
d61=ifelse(year==61,1,0), d62=ifelse(year==62,1,0), d63=ifelse(year==63,1,0),
d64=ifelse(year==64,1,0), d65=ifelse(year==65,1,0))
## Filter data into different years
chow59 <- filter(chow, year>=54 & year<=59)
chow65 <- filter(chow, year>=60 & year<=65)
## Construct correlation matrices and save data
cor59 <- cor(select(chow59, lnrent, lnmult, lnaccess, lnadd, lnmem))
cor65 <- cor(select(chow65, lnrent, lnmult, lnaccess, lnadd, lnmem))
save(cor59,file="cor59.Rdata")
save(cor65,file="cor65.Rdata")
################
## Question 3 ##
##   PART b   ##
################
## Run regression of lnrent and save data
chow.lm65 <- lm(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65)
save(chow.lm65,file="chow.lm65.Rdata")
## Create table for price indices
priceIndexTable <- data.frame(Year=c("1960", "1961", "1962", "1963", "1964", "1965"),
Estimated_Coefficient=chow.lm65$coefficients[1:6])
priceIndexTable <- mutate(priceIndexTable, Price_Index=ifelse(Year==1960,1,exp(Estimated_Coefficient)))
save(priceIndexTable,file="priceIndexTable.Rdata")
################
## Question 3 ##
##   PART e   ##
################
chow <- mutate(chow, generalizedlnrent=lnrent*sqrt(volume),
generalizedlnmult=lnmult*sqrt(volume),
generalizedlnaccess=lnaccess*sqrt(volume),
generalizedlnadd=lnadd*sqrt(volume),
generalizedlnmem=lnmem*sqrt(volume))
rm(chow65.generalized)
chow.generalized.lm65 <- lm(generalizedlnrent ~ d61 + d62 + d63 + d64 + d65 +
generalizedlnmult + generalizedlnmem + generalizedlnaccess,
data=chow65)
chow.generalized.lm65 <- lm(generalizedlnrent ~ d61 + d62 + d63 + d64 + d65 +
generalizedlnmult + generalizedlnmem + generalizedlnaccess,
data=chow)
summary(chow.lm65)
summary(chow.generalized.lm65)
chow.gls65 <- gls(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65, weights=sqrt(volume))
install.packages("nlme")
library(nlme)
## Clear workplace
rm(list = ls())
dev.off()
################
## Question 3 ##
##   PART a   ##
################
## Import data
chow <- read.dta("http://courses.umass.edu/econ753/berndt/stata/chow.dta")
## Add columns
chow <- mutate(chow, lnrent=log(rent), lnmult=log(mult), lnaccess=log(access),
lnadd=log(add), mem=words*binary*digits, lnmem=log(words*binary*digits),
d61=ifelse(year==61,1,0), d62=ifelse(year==62,1,0), d63=ifelse(year==63,1,0),
d64=ifelse(year==64,1,0), d65=ifelse(year==65,1,0))
## Filter data into different years
chow59 <- filter(chow, year>=54 & year<=59)
chow65 <- filter(chow, year>=60 & year<=65)
## Construct correlation matrices and save data
cor59 <- cor(select(chow59, lnrent, lnmult, lnaccess, lnadd, lnmem))
cor65 <- cor(select(chow65, lnrent, lnmult, lnaccess, lnadd, lnmem))
save(cor59,file="cor59.Rdata")
save(cor65,file="cor65.Rdata")
################
## Question 3 ##
##   PART b   ##
################
## Run regression of lnrent and save data
chow.lm65 <- lm(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65)
save(chow.lm65,file="chow.lm65.Rdata")
## Create table for price indices
priceIndexTable <- data.frame(Year=c("1960", "1961", "1962", "1963", "1964", "1965"),
Estimated_Coefficient=chow.lm65$coefficients[1:6])
priceIndexTable <- mutate(priceIndexTable, Price_Index=ifelse(Year==1960,1,exp(Estimated_Coefficient)))
save(priceIndexTable,file="priceIndexTable.Rdata")
################
## Question 3 ##
##   PART e   ##
################
chow65 <- mutate(chow65, generalizedlnrent=lnrent*sqrt(volume),
generalizedlnmult=lnmult*sqrt(volume),
generalizedlnaccess=lnaccess*sqrt(volume),
generalizedlnadd=lnadd*sqrt(volume),
generalizedlnmem=lnmem*sqrt(volume))
chow.generalized.lm65 <- lm(generalizedlnrent ~ d61 + d62 + d63 + d64 + d65 +
generalizedlnmult + generalizedlnmem + generalizedlnaccess,
data=chow65)
chow.lm65 <- gls(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65, weights=sqrt(volume))
View(chow65)
summary(chow.lm65)
summary(chow.generalized.lm65)
chow.lm65 <- gls(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65, weights=sqrt(volume))
View(chow65)
chow.lm65 <- gls(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65, weights=sqrt(chow65$volume))
chow.lm65 <- gls(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65, weights=~sqrt(volume))
summary(chow.lm65)
## Clear workplace
rm(list = ls())
dev.off()
################
## Question 3 ##
##   PART a   ##
################
## Import data
chow <- read.dta("http://courses.umass.edu/econ753/berndt/stata/chow.dta")
## Add columns
chow <- mutate(chow, lnrent=log(rent), lnmult=log(mult), lnaccess=log(access),
lnadd=log(add), mem=words*binary*digits, lnmem=log(words*binary*digits),
d61=ifelse(year==61,1,0), d62=ifelse(year==62,1,0), d63=ifelse(year==63,1,0),
d64=ifelse(year==64,1,0), d65=ifelse(year==65,1,0))
## Filter data into different years
chow59 <- filter(chow, year>=54 & year<=59)
chow65 <- filter(chow, year>=60 & year<=65)
## Construct correlation matrices and save data
cor59 <- cor(select(chow59, lnrent, lnmult, lnaccess, lnadd, lnmem))
cor65 <- cor(select(chow65, lnrent, lnmult, lnaccess, lnadd, lnmem))
save(cor59,file="cor59.Rdata")
save(cor65,file="cor65.Rdata")
################
## Question 3 ##
##   PART b   ##
################
## Run regression of lnrent and save data
chow.lm65 <- lm(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65)
save(chow.lm65,file="chow.lm65.Rdata")
## Create table for price indices
priceIndexTable <- data.frame(Year=c("1960", "1961", "1962", "1963", "1964", "1965"),
Estimated_Coefficient=chow.lm65$coefficients[1:6])
priceIndexTable <- mutate(priceIndexTable, Price_Index=ifelse(Year==1960,1,exp(Estimated_Coefficient)))
save(priceIndexTable,file="priceIndexTable.Rdata")
################
## Question 3 ##
##   PART e   ##
################
chow65 <- mutate(chow65, generalizedlnrent=lnrent*sqrt(volume),
generalizedlnmult=lnmult*sqrt(volume),
generalizedlnaccess=lnaccess*sqrt(volume),
generalizedlnadd=lnadd*sqrt(volume),
generalizedlnmem=lnmem*sqrt(volume))
chow.generalized.lm65 <- lm(generalizedlnrent ~ d61 + d62 + d63 + d64 + d65 +
generalizedlnmult + generalizedlnmem + generalizedlnaccess,
data=chow65)
chow.gls65 <- gls(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65, weights=~sqrt(volume))
summary(chow.lm65)
summary(chow.gls65)
summary(chow.generalized.lm65)
xMatrix <- as.matrix(select(filter(chow, year>=60 & year<=65), lnrent, lnmult, lnaccess, lnadd, lnmem,
d61, d62, d63, d64, d65))
View(xMatrix)
yMatrix <- as.matrix(filter(chow, year>=60 & year<=65)$lnrent)
xMatrix <- as.matrix(select(filter(chow, year>=60 & year<=65), lnmult, lnaccess, lnadd, lnmem,
d61, d62, d63, d64, d65))
yMatrix <- as.matrix(filter(chow, year>=60 & year<=65)$lnrent)
xMatrix <- as.matrix(select(c(filter(chow, year>=60 & year<=65)), lnmult, lnaccess, lnadd, lnmem,
d61, d62, d63, d64, d65))
xMatrix <- as.matrix(select(filter(chow, year>=60 & year<=65), lnmult, lnaccess, lnadd, lnmem,
d61, d62, d63, d64, d65))
xMatrix <- as.matrix(c(select(filter(chow, year>=60 & year<=65), lnmult, lnaccess, lnadd, lnmem,
d61, d62, d63, d64, d65)))
xMatrix <- as.matrix(select(filter(chow, year>=60 & year<=65), lnmult, lnaccess, lnadd, lnmem,
d61, d62, d63, d64, d65))
n(5)
c(2,3)
t(c(2,3))
matrix(c(2,3))
n(10)
numeric(10)
numeric(10)+1
matrix(numeric(10)+1)
View(xMatrix)
cbind(numeric(82)+1,xMatrix)
xMatrix <- cbind(numeric(82)+1,
as.matrix(select(filter(chow, year>=60 & year<=65), lnmult, lnaccess, lnadd, lnmem,
d61, d62, d63, d64, d65)))
yMatrix <- as.matrix(filter(chow, year>=60 & year<=65)$lnrent)
solve(t(xMatrix) %*% xMatrix) %*% t(xMatrix) %*% yMatrix
summary(chow.lm65)
xMatrix <- cbind(numeric(82)+1,
as.matrix(select(chow65, lnmult, lnaccess, lnadd, lnmem,
d61, d62, d63, d64, d65)))
yMatrix <- as.matrix(chow65$lnrent)
solve(t(xMatrix) %*% xMatrix) %*% t(xMatrix) %*% yMatrix
## Clear workplace
rm(list = ls())
dev.off()
################
## Question 3 ##
##   PART a   ##
################
## Import data
chow <- read.dta("http://courses.umass.edu/econ753/berndt/stata/chow.dta")
## Add columns
chow <- mutate(chow, lnrent=log(rent), lnmult=log(mult), lnaccess=log(access),
lnadd=log(add), mem=words*binary*digits, lnmem=log(words*binary*digits),
d61=ifelse(year==61,1,0), d62=ifelse(year==62,1,0), d63=ifelse(year==63,1,0),
d64=ifelse(year==64,1,0), d65=ifelse(year==65,1,0))
## Filter data into different years
chow59 <- filter(chow, year>=54 & year<=59)
chow65 <- filter(chow, year>=60 & year<=65)
## Construct correlation matrices and save data
cor59 <- cor(select(chow59, lnrent, lnmult, lnaccess, lnadd, lnmem))
cor65 <- cor(select(chow65, lnrent, lnmult, lnaccess, lnadd, lnmem))
save(cor59,file="cor59.Rdata")
save(cor65,file="cor65.Rdata")
################
## Question 3 ##
##   PART b   ##
################
## Run regression of lnrent and save data
chow.lm65 <- lm(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65)
save(chow.lm65,file="chow.lm65.Rdata")
## Create table for price indices
priceIndexTable <- data.frame(Year=c("1960", "1961", "1962", "1963", "1964", "1965"),
Estimated_Coefficient=chow.lm65$coefficients[1:6])
priceIndexTable <- mutate(priceIndexTable, Price_Index=ifelse(Year==1960,1,exp(Estimated_Coefficient)))
save(priceIndexTable,file="priceIndexTable.Rdata")
################
## Question 3 ##
##   PART e   ##
################
chow65 <- mutate(chow65, generalizedlnrent=lnrent*sqrt(volume),
generalizedlnmult=lnmult*sqrt(volume),
generalizedlnaccess=lnaccess*sqrt(volume),
generalizedlnadd=lnadd*sqrt(volume),
generalizedlnmem=lnmem*sqrt(volume))
chow.generalized.lm65 <- lm(generalizedlnrent ~ d61 + d62 + d63 + d64 + d65 +
generalizedlnmult + generalizedlnmem + generalizedlnaccess,
data=chow65)
chow.gls65 <- gls(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65, weights=~sqrt(volume))
xMatrix <- cbind(numeric(82)+1,
as.matrix(select(chow65, lnmult, lnaccess, lnadd, lnmem,
d61, d62, d63, d64, d65)))
yMatrix <- as.matrix(chow65$lnrent)
solve(t(xMatrix) %*% xMatrix) %*% t(xMatrix) %*% yMatrix
summary(chow.lm65)
xMatrix <- cbind(numeric(82)+1,
as.matrix(select(chow65, lnmult, lnaccess, lnmem,
d61, d62, d63, d64, d65)))
yMatrix <- as.matrix(chow65$lnrent)
solve(t(xMatrix) %*% xMatrix) %*% t(xMatrix) %*% yMatrix
summary(chow.lm65)
summary(chow.gls65)
betaMatrix <- solve(t(xMatrix) %*% xMatrix) %*% t(xMatrix) %*% yMatrix
yMatrix - Xmatrix %*% betaMatrix
yMatrix - xmatrix %*% betaMatrix
yMatrix - xMatrix %*% betaMatrix
uhat <- yMatrix - xMatrix %*% betaMatrix
t(uhat) %*% uhat
t(uhat) %*% uhat / (82)
View(chow65)
t(uhat) %*% uhat / (82 - 9)
sigma <- t(uhat) %*% uhat / (82 - 9)
sigma[1]
sigma[1,1]
sigmas * solve(t(xMatrix) %*% xMatrix)
sigma * solve(t(xMatrix) %*% xMatrix)
sigma[1] * solve(t(xMatrix) %*% xMatrix)
diagonal(sigma[1] * solve(t(xMatrix) %*% xMatrix))
diag(sigma[1] * solve(t(xMatrix) %*% xMatrix))
summary(chow.lm65)
diag(sigma[1] * solve(t(xMatrix) %*% xMatrix))
## Clear workplace
rm(list = ls())
dev.off()
################
## Question 3 ##
##   PART a   ##
################
## Import data
chow <- read.dta("http://courses.umass.edu/econ753/berndt/stata/chow.dta")
## Add columns
chow <- mutate(chow, lnrent=log(rent), lnmult=log(mult), lnaccess=log(access),
lnadd=log(add), mem=words*binary*digits, lnmem=log(words*binary*digits),
d61=ifelse(year==61,1,0), d62=ifelse(year==62,1,0), d63=ifelse(year==63,1,0),
d64=ifelse(year==64,1,0), d65=ifelse(year==65,1,0))
## Filter data into different years
chow59 <- filter(chow, year>=54 & year<=59)
chow65 <- filter(chow, year>=60 & year<=65)
## Construct correlation matrices and save data
cor59 <- cor(select(chow59, lnrent, lnmult, lnaccess, lnadd, lnmem))
cor65 <- cor(select(chow65, lnrent, lnmult, lnaccess, lnadd, lnmem))
save(cor59,file="cor59.Rdata")
save(cor65,file="cor65.Rdata")
################
## Question 3 ##
##   PART b   ##
################
## Run regression of lnrent and save data
chow.lm65 <- lm(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65)
save(chow.lm65,file="chow.lm65.Rdata")
## Create table for price indices
priceIndexTable <- data.frame(Year=c("1960", "1961", "1962", "1963", "1964", "1965"),
Estimated_Coefficient=chow.lm65$coefficients[1:6])
priceIndexTable <- mutate(priceIndexTable, Price_Index=ifelse(Year==1960,1,exp(Estimated_Coefficient)))
save(priceIndexTable,file="priceIndexTable.Rdata")
################
## Question 3 ##
##   PART e   ##
################
chow65 <- mutate(chow65, generalizedlnrent=lnrent*sqrt(volume),
generalizedlnmult=lnmult*sqrt(volume),
generalizedlnaccess=lnaccess*sqrt(volume),
generalizedlnadd=lnadd*sqrt(volume),
generalizedlnmem=lnmem*sqrt(volume),
generalizedd61=d61*sqrt(volume),
generalizedd62=d62*sqrt(volume),
generalizedd63=d63*sqrt(volume),
generalizedd64=d64*sqrt(volume),
generalizedd65=d65*sqrt(volume))
chow.generalized.lm65 <- lm(generalizedlnrent ~ d61 + d62 + d63 + d64 + d65 +
generalizedlnmult + generalizedlnmem + generalizedlnaccess,
data=chow65)
chow.gls65 <- gls(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65, weights=~sqrt(volume))
## This is just personal stuff testing out how to do regressions with matrices, ignore...
xMatrix <- cbind(numeric(82)+1,
as.matrix(select(chow65, lnmult, lnaccess, lnmem,
d61, d62, d63, d64, d65)))
yMatrix <- as.matrix(chow65$lnrent)
betaMatrix <- solve(t(xMatrix) %*% xMatrix) %*% t(xMatrix) %*% yMatrix
summary(chow.lm65)
uhat <- yMatrix - xMatrix %*% betaMatrix
sigma <- t(uhat) %*% uhat / (82 - 9)
diag(sigma[1] * solve(t(xMatrix) %*% xMatrix))
## Clear workplace
rm(list = ls())
dev.off()
################
## Question 3 ##
##   PART a   ##
################
## Import data
chow <- read.dta("http://courses.umass.edu/econ753/berndt/stata/chow.dta")
## Add columns
chow <- mutate(chow, lnrent=log(rent), lnmult=log(mult), lnaccess=log(access),
lnadd=log(add), mem=words*binary*digits, lnmem=log(words*binary*digits),
d61=ifelse(year==61,1,0), d62=ifelse(year==62,1,0), d63=ifelse(year==63,1,0),
d64=ifelse(year==64,1,0), d65=ifelse(year==65,1,0))
## Filter data into different years
chow59 <- filter(chow, year>=54 & year<=59)
chow65 <- filter(chow, year>=60 & year<=65)
## Construct correlation matrices and save data
cor59 <- cor(select(chow59, lnrent, lnmult, lnaccess, lnadd, lnmem))
cor65 <- cor(select(chow65, lnrent, lnmult, lnaccess, lnadd, lnmem))
save(cor59,file="cor59.Rdata")
save(cor65,file="cor65.Rdata")
################
## Question 3 ##
##   PART b   ##
################
## Run regression of lnrent and save data
chow.lm65 <- lm(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65)
save(chow.lm65,file="chow.lm65.Rdata")
## Create table for price indices
priceIndexTable <- data.frame(Year=c("1960", "1961", "1962", "1963", "1964", "1965"),
Estimated_Coefficient=chow.lm65$coefficients[1:6])
priceIndexTable <- mutate(priceIndexTable, Price_Index=ifelse(Year==1960,1,exp(Estimated_Coefficient)))
save(priceIndexTable,file="priceIndexTable.Rdata")
################
## Question 3 ##
##   PART e   ##
################
chow65 <- mutate(chow65, generalizedvolume=sqrt(volume),
generalizedlnrent=lnrent*sqrt(volume),
generalizedlnmult=lnmult*sqrt(volume),
generalizedlnaccess=lnaccess*sqrt(volume),
generalizedlnadd=lnadd*sqrt(volume),
generalizedlnmem=lnmem*sqrt(volume),
generalizedd61=d61*sqrt(volume),
generalizedd62=d62*sqrt(volume),
generalizedd63=d63*sqrt(volume),
generalizedd64=d64*sqrt(volume),
generalizedd65=d65*sqrt(volume))
chow.generalized.lm65 <- lm(generalizedlnrent ~ d61 + d62 + d63 + d64 + d65 +
generalizedlnmult + generalizedlnmem + generalizedlnaccess,
data=chow65)
chow.gls65 <- gls(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65, weights=~sqrt(volume))
## This is just personal stuff testing out how to do regressions with matrices, ignore...
xMatrix <- cbind(numeric(82)+1,
as.matrix(select(chow65, lnmult, lnaccess, lnmem,
d61, d62, d63, d64, d65)))
yMatrix <- as.matrix(chow65$lnrent)
betaMatrix <- solve(t(xMatrix) %*% xMatrix) %*% t(xMatrix) %*% yMatrix
summary(chow.lm65)
uhat <- yMatrix - xMatrix %*% betaMatrix
sigma <- t(uhat) %*% uhat / (82 - 9)
diag(sigma[1] * solve(t(xMatrix) %*% xMatrix))
xMatrixgls <- as.matrix(select(chow65, generalizedvolume, generalizedlnmult, generalizedlnaccess, generalizedlnmem,
generalizedd61, generalizedd62, generalizedd63, generalizedd64, generalizedd65))
yMatrix <- as.matrix(chow65$generalizedlnrent)
betaMatrixgls <- solve(t(xMatrixgls) %*% xMatrixgls) %*% t(xMatrixgls) %*% yMatrixgls
## Clear workplace
rm(list = ls())
dev.off()
################
## Question 3 ##
##   PART a   ##
################
## Import data
chow <- read.dta("http://courses.umass.edu/econ753/berndt/stata/chow.dta")
## Add columns
chow <- mutate(chow, lnrent=log(rent), lnmult=log(mult), lnaccess=log(access),
lnadd=log(add), mem=words*binary*digits, lnmem=log(words*binary*digits),
d61=ifelse(year==61,1,0), d62=ifelse(year==62,1,0), d63=ifelse(year==63,1,0),
d64=ifelse(year==64,1,0), d65=ifelse(year==65,1,0))
## Filter data into different years
chow59 <- filter(chow, year>=54 & year<=59)
chow65 <- filter(chow, year>=60 & year<=65)
## Construct correlation matrices and save data
cor59 <- cor(select(chow59, lnrent, lnmult, lnaccess, lnadd, lnmem))
cor65 <- cor(select(chow65, lnrent, lnmult, lnaccess, lnadd, lnmem))
save(cor59,file="cor59.Rdata")
save(cor65,file="cor65.Rdata")
################
## Question 3 ##
##   PART b   ##
################
## Run regression of lnrent and save data
chow.lm65 <- lm(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65)
save(chow.lm65,file="chow.lm65.Rdata")
## Create table for price indices
priceIndexTable <- data.frame(Year=c("1960", "1961", "1962", "1963", "1964", "1965"),
Estimated_Coefficient=chow.lm65$coefficients[1:6])
priceIndexTable <- mutate(priceIndexTable, Price_Index=ifelse(Year==1960,1,exp(Estimated_Coefficient)))
save(priceIndexTable,file="priceIndexTable.Rdata")
################
## Question 3 ##
##   PART e   ##
################
chow65 <- mutate(chow65, generalizedvolume=sqrt(volume),
generalizedlnrent=lnrent*sqrt(volume),
generalizedlnmult=lnmult*sqrt(volume),
generalizedlnaccess=lnaccess*sqrt(volume),
generalizedlnadd=lnadd*sqrt(volume),
generalizedlnmem=lnmem*sqrt(volume),
generalizedd61=d61*sqrt(volume),
generalizedd62=d62*sqrt(volume),
generalizedd63=d63*sqrt(volume),
generalizedd64=d64*sqrt(volume),
generalizedd65=d65*sqrt(volume))
chow.generalized.lm65 <- lm(generalizedlnrent ~ d61 + d62 + d63 + d64 + d65 +
generalizedlnmult + generalizedlnmem + generalizedlnaccess,
data=chow65)
chow.gls65 <- gls(lnrent ~ d61 + d62 + d63 + d64 + d65 + lnmult + lnmem + lnaccess,
data=chow65, weights=~sqrt(volume))
## This is just personal stuff testing out how to do regressions with matrices, ignore...
xMatrix <- cbind(numeric(82)+1,
as.matrix(select(chow65, lnmult, lnaccess, lnmem,
d61, d62, d63, d64, d65)))
yMatrix <- as.matrix(chow65$lnrent)
betaMatrix <- solve(t(xMatrix) %*% xMatrix) %*% t(xMatrix) %*% yMatrix
summary(chow.lm65)
uhat <- yMatrix - xMatrix %*% betaMatrix
sigma <- t(uhat) %*% uhat / (82 - 9)
diag(sigma[1] * solve(t(xMatrix) %*% xMatrix))
xMatrixgls <- as.matrix(select(chow65, generalizedvolume, generalizedlnmult, generalizedlnaccess, generalizedlnmem,
generalizedd61, generalizedd62, generalizedd63, generalizedd64, generalizedd65))
yMatrixgls <- as.matrix(chow65$generalizedlnrent)
betaMatrixgls <- solve(t(xMatrixgls) %*% xMatrixgls) %*% t(xMatrixgls) %*% yMatrixgls
summary(betaMatrix)
summary(chow.gls65)
view(betaMatrix)
summary(chow.gls65)
betaMatrix
summary(chow.gls65)
betaMatrixgls
summary(chow.gls65)
varCovarMatrix <- t(uhat) %*% uhat
